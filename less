START PROGRAM
made name=S0 accept=False
made name=S1 accept=False
made name=S2 accept=False
made name=S3 accept=False
length of dictionary: 4
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
1.0 S0
inputs are: ['they', 'can', 'fish']
length of input: 3
step is: 1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
			prob: 1.0 edge weight: 1.0
		(1.0, 'PRO')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(1.0, name=S0 accept=False, '"PRO"')
1.0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S3
step is: 2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: can
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: can
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: can
			prob: 1.0 edge weight: 0.8
			edge word: fish current word: can
			edge word: can current word: can
		(0.8, 'AUX')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0.8, name=S1 accept=False, '"PRO" "AUX"')
0.8 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: can
			edge word: fish current word: can
			edge word: can current word: can
			prob: 1.0 edge weight: 0.1
		(0.1, 'VERB')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0.1, name=S1 accept=False, '"PRO" "VERB"')
0.1 S3
step is: 3
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.8 on step 2 ||
			edge word: can current word: fish
			edge word: fish current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.8 on step 2 ||
			edge word: can current word: fish
			edge word: fish current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.8 on step 2 ||
			edge word: can current word: fish
			edge word: fish current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.8 on step 2 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			prob: 0.8 edge weight: 0.3
		(0.24, 'VERB')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
(0.24, name=S2 accept=False, '"PRO" "AUX" "VERB"')
0.24 S3
"they" "can" "fish" =>  0
length of dictionary: 4
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
1.0 S0
inputs are: ['they', 'can', 'can', 'fish']
length of input: 4
step is: 1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
			prob: 1.0 edge weight: 1.0
		(1.0, 'PRO')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(1.0, name=S0 accept=False, '"PRO"')
1.0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S3
step is: 2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: can
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: can
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: can
			prob: 1.0 edge weight: 0.8
			edge word: fish current word: can
			edge word: can current word: can
		(0.8, 'AUX')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0.8, name=S1 accept=False, '"PRO" "AUX"')
0.8 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: can
			edge word: fish current word: can
			edge word: can current word: can
			prob: 1.0 edge weight: 0.1
		(0.1, 'VERB')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0.1, name=S1 accept=False, '"PRO" "VERB"')
0.1 S3
step is: 3
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.8 on step 2 ||
			edge word: can current word: can
			edge word: fish current word: can
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.8 on step 2 ||
			edge word: can current word: can
			edge word: fish current word: can
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.8 on step 2 ||
			edge word: can current word: can
			edge word: fish current word: can
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.8 on step 2 ||
			edge word: can current word: can
			prob: 0.8 edge weight: 0.7
			edge word: fish current word: can
		(0.5599999999999999, 'VERB')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0.5599999999999999, name=S2 accept=False, '"PRO" "AUX" "VERB"')
0.56 S3
step is: 4
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.56 on step 3 ||
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.56 on step 3 ||
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.56 on step 3 ||
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.56 on step 3 ||
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
(0, None, '')
0 S3
"they" "can" "can" "fish" =>  0
length of dictionary: 4
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
1.0 S0
inputs are: ['they', 'fish']
length of input: 2
step is: 1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
			prob: 1.0 edge weight: 1.0
		(1.0, 'PRO')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(1.0, name=S0 accept=False, '"PRO"')
1.0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S3
step is: 2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			prob: 1.0 edge weight: 0.1
			edge word: can current word: fish
		(0.1, 'VERB')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0.1, name=S1 accept=False, '"PRO" "VERB"')
0.1 S3
"they" "fish" =>  0
length of dictionary: 4
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
1.0 S0
inputs are: ['they', 'fish', 'can']
length of input: 3
step is: 1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
			prob: 1.0 edge weight: 1.0
		(1.0, 'PRO')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(1.0, name=S0 accept=False, '"PRO"')
1.0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S3
step is: 2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			prob: 1.0 edge weight: 0.1
			edge word: can current word: fish
		(0.1, 'VERB')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0.1, name=S1 accept=False, '"PRO" "VERB"')
0.1 S3
step is: 3
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S3
"they" "fish" "can" =>  0
length of dictionary: 4
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
Nothing
1.0 S0
inputs are: ['they', 'fish', 'can', 'can']
length of input: 4
step is: 1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
			prob: 1.0 edge weight: 1.0
		(1.0, 'PRO')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(1.0, name=S0 accept=False, '"PRO"')
1.0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 1.0 on step 0 ||
			edge word: they current word: they
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step -1 ||
		(0, '')
(0, None, '')
0 S3
step is: 2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			edge word: can current word: fish
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 1.0 on step 1 ||
			edge word: can current word: fish
			edge word: fish current word: fish
			prob: 1.0 edge weight: 0.1
			edge word: can current word: fish
		(0.1, 'VERB')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 1 ||
		(0, '')
(0.1, name=S1 accept=False, '"PRO" "VERB"')
0.1 S3
step is: 3
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 2 ||
		(0, '')
	origin sq is |  SQUARE prob= 0.1 on step 2 ||
			edge word: fish current word: can
			edge word: can current word: can
		(0, '')
(0, None, '')
0 S3
step is: 4
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
(0, None, '')
0 S0
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
(0, None, '')
0 S1
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
(0, None, '')
0 S2
dictionary: OrderedDict([('S0', name=S0 accept=False), ('S1', name=S1 accept=False), ('S2', name=S2 accept=False), ('S3', name=S3 accept=False)])
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
	origin sq is |  SQUARE prob= 0 on step 3 ||
		(0, '')
(0, None, '')
0 S3
"they" "fish" "can" "can" =>  0
